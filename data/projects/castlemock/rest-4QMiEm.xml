<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<restExportContainer>
    <applications>
        <application>
            <id>gr1SS8</id>
            <name>automation</name>
            <projectId>4QMiEm</projectId>
            <resources/>
        </application>
    </applications>
    <methods>
        <method>
            <currentResponseSequenceIndex>0</currentResponseSequenceIndex>
            <defaultMockResponseId></defaultMockResponseId>
            <forwardedEndpoint></forwardedEndpoint>
            <httpMethod>GET</httpMethod>
            <id>CgAueC</id>
            <mockResponses/>
            <name>get</name>
            <networkDelay>0</networkDelay>
            <resourceId>lSbiBJ</resourceId>
            <responseStrategy>HEADER_QUERY_MATCH</responseStrategy>
            <simulateNetworkDelay>false</simulateNetworkDelay>
            <status>MOCKED</status>
        </method>
    </methods>
    <mockResponses>
        <mockResponse>
            <body>{&#13;
	"repository": {&#13;
		"url": "git@github.avaldigitallabs.com:avaldigitallabs/bavv-pasivo-qa-backend.git",&#13;
		"branch": "develop"&#13;
	},&#13;
	"environment": "dev",&#13;
	"cucumber": {&#13;
		"options": "--tags '@layer:backend and @regression:yes and not @execution:manual and not @ignore'"&#13;
	}&#13;
}</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>project</header>
                    <matchAny>false</matchAny>
                    <matchCase>true</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-backend-dev</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>3aX0QR</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-backend-dev</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>{&#13;
	"repository": {&#13;
		"url": "git@github.avaldigitallabs.com:avaldigitallabs/bavv-pasivosavvillas-qa-cypress.git",&#13;
		"branch": "stg"&#13;
	},&#13;
	"environment": "stg",&#13;
	"nodejs": {&#13;
		"version": "18.7.0"&#13;
	},&#13;
	"cypress": {&#13;
		"version": "9.5.3",&#13;
		"report": "target/site/cypress",&#13;
		"browser": "chrome",&#13;
		"spec": "cypress/integration/features/flows/CDA/account/Cliente actualizado enrolado CON seguro.js,cypress/integration/features/flows/CDT/Cliente actualizado enrolado fondeo Cuenta.js"&#13;
	}&#13;
}</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>project</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-frontend-stg</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>BIYdSE</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-frontend-stg</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>{"job": {"execute": "IyEvdXNyL2Jpbi9lbnYgYmFzaApLRVk9ZGV2CkVDMj1yYi1wYi1kZXYtdGNwLTMzMTBkOWE2MDk0YmY1YTguZWxiLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tCklERU5USVRZPSdMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFEwS1RVbEpSWEJCU1VKQlFVdERRVkZGUVd4UlQyMHJlVTlDV2t0YU1rbFBRa0pwVTBKNU1TOXphV0pYZVRCdVF6WTNkbmRYTTJWTlZWVjZjMDB5VVVKNWNRMEtUVmgzUkV3d0x6bHNkRkoxY0dONWJDdEpUek5pTVhOWGFFcExPQzlUYVVwdVJXRnpRMjVWVlNzeE1HVlFjekJJTmtwR2RFOTZUVmw2VjFCbk1FbFJjdzBLV25RdlVGTktkVGQ2UnpGTVlXTmpSRkY1VG0xVFRHNDRVbkYzVjJobE9XRlFiekZhTjJGbVVtZFRabkJpWjFCc01VOUxXWEZvVkRWUGJFd3JVbnBMVGcwS09TdERNM1pSVGxSdkwyeDBVekE1U1hGdVR6aHZWMk5PVkRkNkwzWmhOM3BLZGpkaU5IRnljV1poWTB4ck4yUnFjV0pVZWtsT1YyWk9Zemx1WkVwa2NnMEtTR2xhU2xWTFdYSTVjMUZHUzFwQ1VGbFBPRlZVWmpFdlZsWk1ZVVkwWmpoVVptUlFMMnBQVjFod2VqSkhPSE5YZGxoTFIxcDZabU5wYkhwaFRUUTNkQTBLU21OaU1raFhWVUk1WTFSSVl5dDRTMkZYUmtwMlZGZDJPSEpsT0ZFMlR6TlVORVoyVkhkSlJFRlJRVUpCYjBsQ1FVWXZTazVFYmpCNlkxUXdSamRVTUEwS1ZXdDNhVVp3UW5NNWRXeGtNbWM0V0Vnd2IyZEZOWEpJU0V0UU16WmtVakpYU2xKeloyVlBWWGxKTlN0NVVUQTRjVzFqTDNrNVkwSjBNSHBMZDJvM09RMEtTWE12V1hka1oweEJUWGt2VVRaVVkzbE1kV1pXTldGYVRuUlZNelJhYUVocVpqaHRNa3RvTUhGMFozbFlVM0ZIWVdKMGNtTjFSa2MxUkhCT1ptdEVhZzBLTlZvclZqTjJkV05TTVdnNVdHeHBRVzExYTI5TGVtZFNUMVU1WVdSSlRUaHFMemhGWTJwcFMwZHVNRU5qSzJkbVJHNUZUMXBzTlhoclIycDNiVkJUVncwS09VUndTbVJwVlZZeVprWjFhV0pEYTNkd1UyWklURE0wYkV0bmJsTllRVUZTVFdobmEzbFRjUzlyVlVONU5YVXlXRzl2YnlzdlowbFNSekIyYlZVeFJ3MEtRbTk1VEd4UldWaE1TRGwwVW5SdFVUQjVXazVITWtoWWNsTm9iV0pTYVVnelRFRkJPRFJuVmtoc1RqRlRPVll3VTBGb1RtcDNiamhrZUVoRGFFTlVaQTBLVkVWdlZqZENhME5uV1VWQmVsQldOblJoU1M4emMzVk1ZMlZUVmpWUEsyUnZPQ3R1YlZsR1pFYzJjRGhsUTJwUVYwMVliRXgxWm1ablRsRjFVakJVUncwS2VsVTRkM2c1YW5SaGExcFBTbXB6ZDJJeFNHaGxlR2xKTml0bGFrSllLelJKYnk5S1VXZFBSRkJzTkdOMGJqaEVVSFJLY1ZwdE1GUmtjV0ZsT1ZJMGNBMEtkVFJtUVdac2NucGFORlpOTTBzeE1FWlRLMUZGTkVoV2RXOVVSV1JtU20xR1drcDNaWHBhU1hNelRFOVZObU5rZDI5SVoxRlNWVU5uV1VWQmRXZ3JXUTBLWjFacVJXTmljRkp1UVRCdWJuaEljbmxNU1VKSUwyUlZhMXBZYVU1b1ZtMVVNWEJYYzA1M1JtVkpNeXQ2WVRoU1NUaFJWVlF4TjNoU2NGZGhjVXBqUlEwS2NFb3lSaXMxYlVsSFFrVXlabkU1WlZWbU16QnJWbEpGUmxCTE9VaDRXbTV2YUVWQ1FtODBNbkJpUzJaSmRVNTNOVk5GYTFaVlVsWkRibGx0VDI5bFl3MEtkRFI0ZUZaa1UzbFVRM1kxSzA5NlVHZExaekpUV25KQ04yNUdTQ3M0UzJ4c1pIbDRXRGxOUTJkWlFYUk1iVkZhYWtOWVIxTkdjRFpDWldwb1MyTXdNdzBLV1dwNFVrRTBjSGcwWkdoRllVMUxhMnREVG1kbWNUZDJZVVpoTTFWVWNqazBWbTluWnk5d05rNW1kR1ZTUTJZclRXa3JhR2RvZDFVelQwRTRRWGhoYkEwS1ZEaHpUelpXVmxOT01EZG1SVUZ4TkVjMGVHMHZaRFpRYUd4V0swNVhUQzkxZDBrNVIwaEhWblpZV0daSk9FWXlUbWxFZEcwck5YZHBibTlCWjJsdWN3MEtNRmhhU1ZGM1VYUjNjalJ1UWt0NmVuaHpkVmh5VVV0Q1oxRkRRWFJUYVRWRFlrZFFSVGxGY205Tk1IUmhlVGh3T0drMWF6bEtkeXR6VHpsc2FIaGladzBLSzFFdlNqZGtlVFp4VkdKNU9WbFdZM1pzVG5STU4wdGFjRkZ5TWxkeWFWUlFXSFJTY1dKSk4wMXRkMFV6ZWtSVFkyeFBWbnBFWm05YVNsQjZNRFJMUncwS2VVVjBNVkpTVERGTmNtaHdXQ3MzUzBKRmEycDZZMVZvU0hWTlFYaHdZbEpPZDFkSk0xUlZVRUkzYjNSTlZsZDBSM0ZYZGpoS2VqZFVjM05CYUc1SlRBMEtWMFJ2ZDJ0UlMwSm5VVU5CYzNCVlFrTTJSMHRtYkc0MlVYaDNVMUExZDJWRUt6WndWbUk0VUVSa2EyeDVZMUpsTVVsVVZsUlNRV2hqTDNKWlQyZHNMdzBLTm5ZcksyNTRabWxMTlZSVmJqaFdiVVJzY0RjMVRrazRURkpITWtaNFpWQldSV3BEVEdoaU9YTjJia0ZsZUhaRlRUVTJSVkV6V21GemFXTklVa3gzVmcwS04xcHNLMDkwTDJwUFkzRnJZak0wYXpCUU5UZE5OaXMxYW1KYVkwdFVNV2RNYUdWNVlrbFdUMnByZURCUEsyaGtOM2syWlRaQlBUME5DaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0JwplY2hvICRJREVOVElUWSB8IGJhc2U2NCAtZCA+ICIkS0VZIgpjaG1vZCAtUiA3MDAgIiRLRVkiCnNzaCAtbyBTdHJpY3RIb3N0S2V5Q2hlY2tpbmc9bm8gLWkgIiRLRVkiICJlYzItdXNlckAkRUMyIiA8PCdFTkRTU0gnCiAgS05PV19IT1NUPSdaMmwwYUhWaUxtRjJZV3hrYVdkcGRHRnNiR0ZpY3k1amIyMGdaV05rYzJFdGMyaGhNaTF1YVhOMGNESTFOaUJCUVVGQlJUSldhbHBJVG1oTVdFNXZXVlJKZEdKdGJIcGtTRUY1VGxSWlFVRkJRVWxpYld4NlpFaEJlVTVVV1VGQlFVSkNRa0ZyYjFkSVQwaGtaak5NYTBWaldVRk9OVTF5UVVrMVlVRnBkWEpSTXpsMGNuaFpSRnB2WTB4SmFWcFJjWGxtUW1GbE1HMVVkblJxSzA5TE1Fa3JVbG93V1hoaU5WUm9ibkZ6U1RCaUwwVk5ZV2x1ZWtwelBRbz0nCiAgUFJPSkVDVF9JRD0nYmF2di1wYXNpdm8tcWEtZnJvbnRlbmQtZGV2JwogIEpPQl9ERUZJTklUSU9OPSIkKGN1cmwgLS1yZXF1ZXN0IEdFVCAnaHR0cDovL3JiLXBiLXN0Zy0xNzkzMjYxNjc4LnVzLWVhc3QtMi5lbGIuYW1hem9uYXdzLmNvbS9jYXN0bGVtb2NrL21vY2svcmVzdC9wcm9qZWN0LzRRTWlFbS9hcHBsaWNhdGlvbi9ncjFTUzgvY29uZmlnJyAtLWhlYWRlciAicHJvamVjdDokUFJPSkVDVF9JRCIpIgogIEdJVF9VUkw9JChlY2hvICRKT0JfREVGSU5JVElPTiB8IGpxIC1yICcucmVwb3NpdG9yeS51cmwnKQogIEdJVF9CUkFOQ0g9JChlY2hvICRKT0JfREVGSU5JVElPTiB8IGpxIC1yICcucmVwb3NpdG9yeS5icmFuY2gnKQogIEVOVklST05NRU5UPSQoZWNobyAkSk9CX0RFRklOSVRJT04gfCBqcSAtciAnLmVudmlyb25tZW50JykKICBSRVBPUlRfUEFUSD0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5jeXByZXNzLnJlcG9ydCcpCiAgTk9ERUpTX1ZFUlNJT049JChlY2hvICRKT0JfREVGSU5JVElPTiB8IGpxIC1yICcubm9kZWpzLnZlcnNpb24nKQogIENZUFJFU1NfVkVSU0lPTj0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5jeXByZXNzLnZlcnNpb24nKQogIENZUFJFU1NfU1BFQz0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5jeXByZXNzLnNwZWMnKQogIENZUFJFU1NfQlJPV1NFUj0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5jeXByZXNzLmJyb3dzZXInKQogIEdJVF9QUk9KRUNUPSQoYmFzZW5hbWUgJEdJVF9VUkwpCiAgR0lUX1BST0pFQ1RfTkFNRT0ke0dJVF9QUk9KRUNUJS4qfQogIFdPUktfRElSPSIvaG9tZS9lYzItdXNlci9qZW5raW5zIgogIFNTSF9ESVI9IiRXT1JLX0RJUi8uc3NoIgogIFNTSF9GSUxFPSIkU1NIX0RJUi9pZF9yc2EiCiAgS05PV19IT1NUX0ZJTEU9IiRTU0hfRElSL2tub3duX2hvc3RzIgogIHN1ZG8gcm0gLXJmICIkV09SS19ESVIiCiAgbWtkaXIgLXAgIiRTU0hfRElSIgogIGNkICIkV09SS19ESVIiCiAgZWNobyAiJEtOT1dfSE9TVCIgfCBiYXNlNjQgLWQgPiAiJEtOT1dfSE9TVF9GSUxFIgogIGN1cmwgLS1yZXF1ZXN0IEdFVCAnaHR0cDovL3JiLXBiLXN0Zy0xNzkzMjYxNjc4LnVzLWVhc3QtMi5lbGIuYW1hem9uYXdzLmNvbS9jYXN0bGVtb2NrL21vY2svcmVzdC9wcm9qZWN0LzRRTWlFbS9hcHBsaWNhdGlvbi9ncjFTUzgvY29uZmlnJyAtLWhlYWRlciAna2V5OionIHwgYmFzZTY0IC1kID4gIiRTU0hfRklMRSIKICBlY2hvICJleHBvcnQgR0lUX1VSTD0kR0lUX1VSTCIgPiBlbnYKICBlY2hvICJleHBvcnQgR0lUX0JSQU5DSD0kR0lUX0JSQU5DSCIgPj4gZW52CiAgZWNobyAiZXhwb3J0IEdJVF9QUk9KRUNUX05BTUU9JEdJVF9QUk9KRUNUX05BTUUiID4+IGVudgogIGVjaG8gImV4cG9ydCBSRVBPUlRfUEFUSD0kUkVQT1JUX1BBVEgiID4+IGVudgogIGVjaG8gImV4cG9ydCBFTlZJUk9OTUVOVD0kRU5WSVJPTk1FTlQiID4+IGVudgogIGVjaG8gImV4cG9ydCBOT0RFSlNfVkVSU0lPTj0kTk9ERUpTX1ZFUlNJT04iID4+IGVudgogIGVjaG8gImV4cG9ydCBDWVBSRVNTX1ZFUlNJT049JENZUFJFU1NfVkVSU0lPTiIgPj4gZW52CiAgZWNobyAiZXhwb3J0IENZUFJFU1NfU1BFQz0kQ1lQUkVTU19TUEVDIiA+PiBlbnYKICBlY2hvICJleHBvcnQgQ1lQUkVTU19CUk9XU0VSPSRDWVBSRVNTX0JST1dTRVIiID4+IGVudgogIGNhdCBlbnYKICBkb2NrZXIgcnVuIC0tcm0gLXYgJChwd2QpLy5zc2g6L3Jvb3QvLnNzaCAtdiAkKHB3ZCk6L2dpdCBhbHBpbmUvZ2l0IGNsb25lIC1iICRHSVRfQlJBTkNIICRHSVRfVVJMCiAgY2QgJEdJVF9QUk9KRUNUX05BTUUKICBkb2NrZXIgcnVuIC0tcm0gLXYgJFBXRDovYXBwIGJpdG5hbWkvbm9kZTokTk9ERUpTX1ZFUlNJT04gbnBtIGluc3RhbGwKICBkb2NrZXIgcnVuIC0tcm0gLXYgJFBXRDovZTJlIC13IC9lMmUgY3lwcmVzcy9pbmNsdWRlZDokQ1lQUkVTU19WRVJTSU9OIHJ1biAtYiAke0NZUFJFU1NfQlJPV1NFUn0gLS1oZWFkbGVzcyAtLXJlcG9ydGVyIGN5cHJlc3MtbXVsdGktcmVwb3J0ZXJzIC0tcmVwb3J0ZXItb3B0aW9ucyBjb25maWdGaWxlPWN5cHJlc3MuanNvbiAtLWVudiBjb25maWdGaWxlPSRFTlZJUk9OTUVOVCAtcyAiJENZUFJFU1NfU1BFQyIKRU5EU1NICg==","closure":"IyEvdXNyL2Jpbi9lbnYgYmFzaApLRVk9ZGV2CkVDMj1yYi1wYi1kZXYtdGNwLTMzMTBkOWE2MDk0YmY1YTguZWxiLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tCklERU5USVRZPSdMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFEwS1RVbEpSWEJCU1VKQlFVdERRVkZGUVd4UlQyMHJlVTlDV2t0YU1rbFBRa0pwVTBKNU1TOXphV0pYZVRCdVF6WTNkbmRYTTJWTlZWVjZjMDB5VVVKNWNRMEtUVmgzUkV3d0x6bHNkRkoxY0dONWJDdEpUek5pTVhOWGFFcExPQzlUYVVwdVJXRnpRMjVWVlNzeE1HVlFjekJJTmtwR2RFOTZUVmw2VjFCbk1FbFJjdzBLV25RdlVGTktkVGQ2UnpGTVlXTmpSRkY1VG0xVFRHNDRVbkYzVjJobE9XRlFiekZhTjJGbVVtZFRabkJpWjFCc01VOUxXWEZvVkRWUGJFd3JVbnBMVGcwS09TdERNM1pSVGxSdkwyeDBVekE1U1hGdVR6aHZWMk5PVkRkNkwzWmhOM3BLZGpkaU5IRnljV1poWTB4ck4yUnFjV0pVZWtsT1YyWk9Zemx1WkVwa2NnMEtTR2xhU2xWTFdYSTVjMUZHUzFwQ1VGbFBPRlZVWmpFdlZsWk1ZVVkwWmpoVVptUlFMMnBQVjFod2VqSkhPSE5YZGxoTFIxcDZabU5wYkhwaFRUUTNkQTBLU21OaU1raFhWVUk1WTFSSVl5dDRTMkZYUmtwMlZGZDJPSEpsT0ZFMlR6TlVORVoyVkhkSlJFRlJRVUpCYjBsQ1FVWXZTazVFYmpCNlkxUXdSamRVTUEwS1ZXdDNhVVp3UW5NNWRXeGtNbWM0V0Vnd2IyZEZOWEpJU0V0UU16WmtVakpYU2xKeloyVlBWWGxKTlN0NVVUQTRjVzFqTDNrNVkwSjBNSHBMZDJvM09RMEtTWE12V1hka1oweEJUWGt2VVRaVVkzbE1kV1pXTldGYVRuUlZNelJhYUVocVpqaHRNa3RvTUhGMFozbFlVM0ZIWVdKMGNtTjFSa2MxUkhCT1ptdEVhZzBLTlZvclZqTjJkV05TTVdnNVdHeHBRVzExYTI5TGVtZFNUMVU1WVdSSlRUaHFMemhGWTJwcFMwZHVNRU5qSzJkbVJHNUZUMXBzTlhoclIycDNiVkJUVncwS09VUndTbVJwVlZZeVprWjFhV0pEYTNkd1UyWklURE0wYkV0bmJsTllRVUZTVFdobmEzbFRjUzlyVlVONU5YVXlXRzl2YnlzdlowbFNSekIyYlZVeFJ3MEtRbTk1VEd4UldWaE1TRGwwVW5SdFVUQjVXazVITWtoWWNsTm9iV0pTYVVnelRFRkJPRFJuVmtoc1RqRlRPVll3VTBGb1RtcDNiamhrZUVoRGFFTlVaQTBLVkVWdlZqZENhME5uV1VWQmVsQldOblJoU1M4emMzVk1ZMlZUVmpWUEsyUnZPQ3R1YlZsR1pFYzJjRGhsUTJwUVYwMVliRXgxWm1ablRsRjFVakJVUncwS2VsVTRkM2c1YW5SaGExcFBTbXB6ZDJJeFNHaGxlR2xKTml0bGFrSllLelJKYnk5S1VXZFBSRkJzTkdOMGJqaEVVSFJLY1ZwdE1GUmtjV0ZsT1ZJMGNBMEtkVFJtUVdac2NucGFORlpOTTBzeE1FWlRLMUZGTkVoV2RXOVVSV1JtU20xR1drcDNaWHBhU1hNelRFOVZObU5rZDI5SVoxRlNWVU5uV1VWQmRXZ3JXUTBLWjFacVJXTmljRkp1UVRCdWJuaEljbmxNU1VKSUwyUlZhMXBZYVU1b1ZtMVVNWEJYYzA1M1JtVkpNeXQ2WVRoU1NUaFJWVlF4TjNoU2NGZGhjVXBqUlEwS2NFb3lSaXMxYlVsSFFrVXlabkU1WlZWbU16QnJWbEpGUmxCTE9VaDRXbTV2YUVWQ1FtODBNbkJpUzJaSmRVNTNOVk5GYTFaVlVsWkRibGx0VDI5bFl3MEtkRFI0ZUZaa1UzbFVRM1kxSzA5NlVHZExaekpUV25KQ04yNUdTQ3M0UzJ4c1pIbDRXRGxOUTJkWlFYUk1iVkZhYWtOWVIxTkdjRFpDWldwb1MyTXdNdzBLV1dwNFVrRTBjSGcwWkdoRllVMUxhMnREVG1kbWNUZDJZVVpoTTFWVWNqazBWbTluWnk5d05rNW1kR1ZTUTJZclRXa3JhR2RvZDFVelQwRTRRWGhoYkEwS1ZEaHpUelpXVmxOT01EZG1SVUZ4TkVjMGVHMHZaRFpRYUd4V0swNVhUQzkxZDBrNVIwaEhWblpZV0daSk9FWXlUbWxFZEcwck5YZHBibTlCWjJsdWN3MEtNRmhhU1ZGM1VYUjNjalJ1UWt0NmVuaHpkVmh5VVV0Q1oxRkRRWFJUYVRWRFlrZFFSVGxGY205Tk1IUmhlVGh3T0drMWF6bEtkeXR6VHpsc2FIaGladzBLSzFFdlNqZGtlVFp4VkdKNU9WbFdZM1pzVG5STU4wdGFjRkZ5TWxkeWFWUlFXSFJTY1dKSk4wMXRkMFV6ZWtSVFkyeFBWbnBFWm05YVNsQjZNRFJMUncwS2VVVjBNVkpTVERGTmNtaHdXQ3MzUzBKRmEycDZZMVZvU0hWTlFYaHdZbEpPZDFkSk0xUlZVRUkzYjNSTlZsZDBSM0ZYZGpoS2VqZFVjM05CYUc1SlRBMEtWMFJ2ZDJ0UlMwSm5VVU5CYzNCVlFrTTJSMHRtYkc0MlVYaDNVMUExZDJWRUt6WndWbUk0VUVSa2EyeDVZMUpsTVVsVVZsUlNRV2hqTDNKWlQyZHNMdzBLTm5ZcksyNTRabWxMTlZSVmJqaFdiVVJzY0RjMVRrazRURkpITWtaNFpWQldSV3BEVEdoaU9YTjJia0ZsZUhaRlRUVTJSVkV6V21GemFXTklVa3gzVmcwS04xcHNLMDkwTDJwUFkzRnJZak0wYXpCUU5UZE5OaXMxYW1KYVkwdFVNV2RNYUdWNVlrbFdUMnByZURCUEsyaGtOM2syWlRaQlBUME5DaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Jwpzc2ggLW8gU3RyaWN0SG9zdEtleUNoZWNraW5nPW5vIC1pICIkS0VZIiAiZWMyLXVzZXJAJEVDMiIgPDwnRU5EU1NIJwogIFdPUktfRElSPSIvaG9tZS9lYzItdXNlci9qZW5raW5zIgogIC4gIiRXT1JLX0RJUi9lbnYiCiAgUkVQT1JUX0FCU09MVVRFX1BBVEg9IiRXT1JLX0RJUi8kR0lUX1BST0pFQ1RfTkFNRS8kUkVQT1JUX1BBVEgiCiAgY2QgIiRXT1JLX0RJUi8kR0lUX1BST0pFQ1RfTkFNRSIKICBkb2NrZXIgcnVuIC0tcm0gLXYgJFBXRDovYXBwIGJpdG5hbWkvbm9kZTokTk9ERUpTX1ZFUlNJT04gL2Jpbi9iYXNoIC1jICJhcHQgdXBkYXRlICYmIGFwdC1nZXQgaW5zdGFsbCAteSBzb2Z0d2FyZS1wcm9wZXJ0aWVzLWNvbW1vbiAmJiBhZGQtYXB0LXJlcG9zaXRvcnkgJ2RlYiBodHRwOi8vc2VjdXJpdHkuZGViaWFuLm9yZy9kZWJpYW4tc2VjdXJpdHkgc3RyZXRjaC91cGRhdGVzIG1haW4nICYmIGFwdCB1cGRhdGUgJiYgYXB0IGluc3RhbGwgLXkgb3Blbmpkay04LWpkayAmJiBucG0gcnVuIHRlc3Q6cmVwb3J0cyIKICBjZCAkUkVQT1JUX0FCU09MVVRFX1BBVEgKICBSRVBPUlRfSU5ERVhfRklMRT0kKGZpbmQgLiAtdHlwZSBmIC1yZWdleCAiLiouaHRtbCIgfCBoZWFkIC1uIDEpCiAgZWNobyAiW0lORk9dIFJFUE9SVCBQQVRIOiAkV09SS19ESVIvJEdJVF9QUk9KRUNUX05BTUUvJFJFUE9SVF9QQVRIIgogIGVjaG8gIltJTkZPXSBSRVBPUlRfSU5ERVhfRklMRTogJFJFUE9SVF9JTkRFWF9GSUxFIgogIHN1ZG8gbXYgLWYgJFJFUE9SVF9JTkRFWF9GSUxFIGluZGV4Lmh0bWwKICBscyAtbAogIFpJUF9GSUxFPSIkV09SS19ESVIvcmVwb3J0LnppcCIKICB6aXAgJFpJUF9GSUxFIC1yIC4KRU5EU1NICkZJTEVfTkFNRT0icmVwb3J0LnppcCIKU1JDX1BBVEg9Ii9ob21lL2VjMi11c2VyL2plbmtpbnMvJEZJTEVfTkFNRSIKVEFSR0VUX1BBVEg9Ii4iClBJUEVMSU5FX1RBUkdFVF9QQVRIPSIuL3RhcmdldC9zaXRlL3NlcmVuaXR5IgpzY3AgLWkgIiRLRVkiICJlYzItdXNlckAkRUMyOiRTUkNfUEFUSCIgIiRUQVJHRVRfUEFUSCIKcm0gLXJmICIkUElQRUxJTkVfVEFSR0VUX1BBVEgiCm1rZGlyIC1wICIkUElQRUxJTkVfVEFSR0VUX1BBVEgiCnVuemlwICIkVEFSR0VUX1BBVEgvJEZJTEVfTkFNRSIgLWQgIiRQSVBFTElORV9UQVJHRVRfUEFUSCIKbHMgLVJsICRQSVBFTElORV9UQVJHRVRfUEFUSAo="}}&#13;
</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>job</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-frontend-dev</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>vsd8Ce</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-frontend-cypress-dev</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>{&#13;
	"repository": {&#13;
		"url": "git@github.avaldigitallabs.com:avaldigitallabs/bavv-pasivosavvillas-qa-cypress.git",&#13;
		"branch": "dev"&#13;
	},&#13;
	"environment": "dev",&#13;
	"nodejs": {&#13;
		"version": "18.7.0"&#13;
	},&#13;
	"cypress": {&#13;
		"version": "9.5.3",&#13;
		"report": "target/site/cypress",&#13;
		"browser": "chrome",&#13;
		"spec": "cypress/integration/features/flows/CDA/account/Cliente actualizado enrolado CON seguro.js,cypress/integration/features/flows/CDA/deposit/NO Cliente NO actualizado NO enrolado CON seguro.js,cypress/integration/features/flows/CDT/Cliente actualizado enrolado fondeo Cuenta.js,cypress/integration/features/flows/CDT/NO Cliente actualizado enrolado.js"&#13;
	}&#13;
}</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>project</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-frontend-dev</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>u8FOw9</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-frontend-dev</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>{&#13;
	"repository": {&#13;
		"url": "git@github.avaldigitallabs.com:avaldigitallabs/bavv-pasivo-qa-backend.git",&#13;
		"branch": "stage"&#13;
	},&#13;
	"environment": "stg",&#13;
	"cucumber": {&#13;
		"options": "--tags '@layer:backend and @regression:yes and not @execution:manual and not @ignore'"&#13;
	}&#13;
}</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>project</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-backend-stg</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>LpXjZu</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-backend-stg</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQ0KTUlJRW93SUJBQUtDQVFFQXRQNWdDWlpxdjFMWUNqWExibkNwM0pSaHJFcmpzNlM0dTFjcXRCK2ZaR0J4VVJYRA0KV2ZkM2RHZ3pJZ3lnTXJCenFzRVcxT2d1OG4vckFGM1YzbklDUWhDOUppM3B0eUhyVm5PQlB2ZDB1alUwcG40UA0KWVFLYzJUeUF2djZXd0IwT1hWN3puckFqbmF4WVNkTHdkSmVkRUVzcjZhRmRsZXRlNys0Y0ZsU01uVS9wci93ZA0KanhWR0kzMUMzcGxUWGZpOWJYM2N5NXBBNE5WUFFMQXpSbU1BekN5RFltdXRKUTNuRkZCdkdQUEYzaVRXcmRHNA0KLytOSXJqd01kYSt0TW5rU2NpVTVuUTRCWU5qZ1dqZ2Z1ZS9tdTY5VEk4WE1nNy9tTEMyYXlCcUVYczhYenhmRQ0KZkxKRjhKcjQ3dGswSjV5RExmeVR4bjVXYlJqUFRxT04wUEE5NXdJREFRQUJBb0lCQUFnODk5UVg0NTMzd0Z1ZQ0KblRiV3EvU2RVR0RPTzlVR2IxNGZscE1DU1hnQko4ZEFEVmMvKzFEeUdUbTRoMlluUCt5S3cyWkhkek9VZlBiVQ0KVHBMRWI3UGdIU3ZxdFJPZjJKMWp2b05HTWlyemx3VHBBZnd4YVVBK0Q4SWh4bXpTSmNBOFBTeUE2ZTRZVlNCdg0KR0lER0VlRVcrdFcwZ1pUOFZLTHBIS0Fya3dicDg2ZFMwVzdYUVVsNjdVK1dlQmRNUEdXRkdSZWlOVlBXcjVYdg0KYlo5NVVnZVZWZTRJWXRBbFRzRTJPLzBON0g5aUJMVFQwMU5Wakh1bHMxT0xodlgydlhkbmNzUG1vcHBxeEJxdw0KMGhqY2V5LzRXN0dweS9KNGp6SitkZTZIdHp6Y29jOVFhcC8zNmUrWFJLNWw3YUxvZ3k1SDUzV1QySUFxdXdsZg0KR2FIUG9Ea0NnWUVBM2Q3WE1pYzNVcitucmkyaW83Y3AxcVZBTDRMc3d5RStQbU9tWkJGN1QrOHYwejJqYUdBVg0KNTkrQzdITktqVFBab2NNZnVVbXZCaU50bEwxaURsNzhhYTlGRTBzZ3Q2YUJYQjdaeSt1Qmpia2kvTUJEZmxoZg0KampXaTZDS1YxdVhiWFUydGd1eFhyZWVOb2hCN1V2TUZMakViUjRndUt2WkRxK2YzN2l2K3NPc0NnWUVBME5YUw0KNVpscFpZMkdOekNDcjMvOVd5eXhleG81Tlh2MmkvWVlzYkZ2S0NrcDN2ZzIvVHhyV05mY2JQN3J4U0FxYW50Qg0KZWVlN25QcXpGK3lVZHNyQ1RzOVRwZjFjTmFSQktKK0d4RUhsQ0RjRjR3dVdhNnNlU253YlJIUjFyZG9jYjJyLw0KS0k2dFZRMS9TTktrbDVZUnlmcE1WbFFyeG9vSlRKWHgvdE52aC9VQ2dZQmNMTWNrZSt4ZEFXaU5VVUkvVjhvVw0KOWFKYjJyMjROMmhmalJERWhBckI0N0h2eGF6TW9SYVl0Vi8wRWRYSUllRnBkZUlKSFZhTWEwMk1QTDJ2RU1FMg0KdXUwc25jcWk0WmJlaWFhY05HUW5WK0gwTllBVXptd3NiWllYY0w3bGY2c0o4VXFEbU9LNFNmbXFlY1J5YXFvZA0KVGFOeXJWM1kxV1M1MTI1R1VackhMd0tCZ0ZHY0xmV1IxVEZkZENUZkxVTCtSbms1NXdYUGdxblhEc3MxV2dNZQ0KN3V5SDRaZ0Q4aUZXV2pEMjhtb1oyUE5KRmFwVkRvcGdOOTRwenBFNzMrem9ZYlRBcXRURVJTT2xVOTFYTWloQw0KQkFvSXpxRWlweDdlV1ZFTVhPK01mMng0UHdKL2tzVTd0SnIzVWxXWUU4QTFZakJIUTB1OVN2b2tlV3ZYY1NGLw0KYVNkOUFvR0JBTFpPQ2R0Q0ZwZEVUREphZW9PN0dDSWJJaGUzZUI2MG00RTV2NWh5VjFXVlRXa04xa2lnYkROZg0KS201TkIxTElPblRGaGVTRStJZlZHang4VGtlQmU5R0RGbkFHNXpyNFVDZDkxaHV2MGV6MS9oS0ZSZXJxbFQ1RA0KZXRHRXBJYzZSdHBCcnZiLy9sOExzUEFTdTRzZ0lYeTB1NHNUcWE1bUlMODN6K2NkTldlQg0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0NCg==</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>key</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>*</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>hfO7mf</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-key</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
        <mockResponse>
            <body>{"job": {"execute": "IyEvdXNyL2Jpbi9lbnYgYmFzaApLRVk9c3RnCkVDMj1yYi1wYi1zdGctdGNwLTI2NTdiMzgzNGYzMGE1NWMuZWxiLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tCklERU5USVRZPSdMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFEwS1RVbEpSWEJSU1VKQlFVdERRVkZGUVRGRGJXNU1VbFZwVFUwM1ZYaHVSbGRQZEhreVUwZHRkVVZZVTBacmRrbG1Vemh1TDA5SFNtVkRSVWROYkRWc2FnMEtZVUpuYkVOQ1duaFJZazlsWVc1UFoxSmFaVU5KU3pFMlluaFllRVpUYUZSdU0ycFRSR1pzZDB0SWN5dGtURzFJWnpnd1psbDJSbTFwTnlzelRqRmhTUTBLU2tSUGNtNXpkVU5pTTFWYVRIWlBOWE5KU2xwSE5rVnFhbXhwUkZCeFRVTlliVU5KV2xCRlJtOHdkVUUzZFZSclVrZFlhRkJZTVdKbmJWbHZkMDV3VkEwS1YzVkdjRWxsV1c0NU1VVmtNVkY0YmxkWE56Wklla2xoYVZKa2FtaGxNalprYzNOR01HZDZZaTkwVVVSdGFYZzBWblYxWW1KR1VVZ3dMMW8yT0VOVU1nMEtkbmhrV2xKNE1XUndSbXBhTDJVeVFrZEpSWHBDY1dRemNGaEpUVWhIVTBwbVpXOVBaMmxXUVU4M1pVZHBNamhHYUZneFFWVjNSRUpFYXpWSVUyUmtSQTBLZFdkTU0wOVdVak50T0ZaNE5XSnhWVkoxVnpWRGRHaHFWWGh3WlhCTmRtSkNWbkpRTjNkSlJFRlJRVUpCYjBsQ1FWRkVTR1p6VFhKeFVYVldVMWRpV2cwS2EyZHBOMGxJTlcxaFRHazRkMUYzTkhWSFMyeExWRTVNUjFoUVFqTTJSVXhwTjJac1ZWazNRWEJDYlhFMVprc3pkR3BIYlZCdGFXeDNXRzB5Y1hKTlpRMEtZV1ZVTTNSMWQwNUtPV1JIZFZaNGJ6bFhkSFpwTld4UWRVSXpjMjFyUkRGVUwwTkVNbVpKZFZKeU5VaG1OWGhIWjJaaVFTdHNRUzl2Y1RKRlZUaGFWZzBLVWpSSllYSkVjVlZpS3pSV1RtaElkV3RHZG5veFRHbFBNRk5yVXpKeVV6bFJTbE54VTFCemRXNHJUbGxTY2s5YWQyZDVhalZPT0VzM1kzVlFOVXhLVkEwS1FreEVabGR3WmtKUlkzVnhNM2t3WlU0NU56aFRTVTUzVVUxclZWbHFhSEI2VkVremQyVktUMk4zWW5CVmNWUkZUUzh4ZFZCMFEwMVFWVzFYVWpaWlRnMEtkV3N6YnpRMk5rdElTalJESzBaUFZqUkdTamxwUjB4clUyUTFWVGRLZFROQ2RHMVJVM2xKYUV0alZXUkVVbTVqZEVZeU4wRjNjbGhvU0VaWVpYVTFVQTBLUzNOM1puazJVRUpCYjBkQ1FWQTNaakZCUVd0emExRmxLMEpuVWtSSFZrYzFWSFZJVWpWeE4xRlNNMHhPVUV3dlV6bGtZazlyYW01VWFYZFJUekpWVWcwS1NVMDBlRUZITUhWdVNGWkRibmh5TWtWWk9ETndPRGhtWVhCTk5VZFdWM1Z2WkVwTlNsZHJiVW92Y1U0eFlqRkhPRU5sZGs1TFJHNUJlalpSVUdKUVpBMEtjbXhXVEhsa01tNVZjMnhzZGpBeVMwTjZZMDVVV2k5bUswMVNNVUl4ZUcxVlIxWTBVemRUTVdOSWNTdDJhbXAyYXpOSGVUaDFiMnhCYjBkQ1FVNVZXZzBLYVVsaWVETllMMjlXU1U5Rk5uZHZPU3RFWm5STmVXbFBUV1JWY21aU1JUSmhVRzFIUlV4dFkxZzBVekZpUWxsR2FsVnVRWFZWZHk5bWIwVnhVRWxEU0EwS1puUXlibXh6WlRoYVkxRkdTRlJ2T0djdlJHSnRSMFEyWkcxNlEyUmtPR3hYVDBoNGJWQjBPV2RwWWtOeWFFdFFkMjVNUVdNMmVYQnpka1ZOZURSc2RnMEtOVWhFVUhsTFVGWXpiblJxTUZOdmNGbFVkV0Y1V0U1VE5uQlRUVlpVV0hFd2JXTXpjREZQUkVGdlIwSkJVRm9yVm1wUlJsTlljbXRWUzBKR04wc3dUdzBLUldGcGRYWnhkVUZ4WjNNNFpXVnpRWGxOU25kamEwRk1ieXRwZEd0cFR5dHRka2RRU25CQ2VGbGtUblZMVWpSVlIxRjBabXRwVjFsb2NWQXpkSFUzVFEwS2R6Wm1NVU5OUmxkeE5XVkJSVTVVVEdoSWREZ3dVRTVGVDBSclRHMTNSVmhTWjBWelIxRkZURlE1SzBSVVlUWmFPRkp4S3k5UVJ5OHhTVVkzYUZSRWVBMEtjWEJPV0RocEwwVjNhRWRVTkRkcFFYbDVTazVLVHpCYVFXOUhRa0ZLU3psMk1tSXhXRVZ4T0RaS01tTlNUMGhNY0VsaFYyWjZhalZIWkZkd01tSnBiQTBLYlVGdWFsTk9ZMWh0UTNKb1dubHRUemQ1YTFCWWEyNXJSM2t2UlhKME4zVTNkWGxvWmpsSVVYRk9PR1pwYlROVmVVTktkV2hRUzJFMWFuVnJaVTVwVGcwS1pHcFJORlYwYTNwS2VFZGlNRFZUVTJwQ2NrczNXbnBFVTNGYU1ETXhOa1IyTTBoNmEzb3hSMmMyY2tOS1NVWTRPWGxwT1ZGUFZqVXZia1ZIV2xwTU5BMEtVR0ZUTkVSVVFWUkJiMGRCVjAxblZsUlFjRWR2V2xobGNUZFllbWhTYm0xSGNXeDBRbEozTkdWdFpHdE5lbk16T0N0bmRXSXpPSGx6Ylc4NE5VWTFlUTBLY1dkUlRsazFjMVZvWTNCTFMyWmhjblU0UVdGaVRrSlliVGhHYVZkbFpYbEJVak4zVUdsUWRWbzNjRlkzTUhwemJWVnZhM3AyVTNCNmJVSmpNMFl6YmcwS1pWQlhhVWwwUzFZMVZ6WndPVFJEU1hGck16RjRZMDlNVWxGRGEwNHJRWGR1VUhkaVZqQkJSSFZuZVhRNWRFRnBVVEJCUjFkRGN6ME5DaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0JwpQUk9KRUNUX0lEPSdiYXZ2LXBhc2l2by1xYS1mcm9udGVuZC1zdGcnCmVjaG8gJElERU5USVRZIHwgYmFzZTY0IC1kID4gIiRLRVkiCmNobW9kIC1SIDcwMCAiJEtFWSIKc3NoIC1vIFN0cmljdEhvc3RLZXlDaGVja2luZz1ubyAtaSAiJEtFWSIgImVjMi11c2VyQCRFQzIiIDw8J0VORFNTSCcKICBLTk9XX0hPU1Q9J1oybDBhSFZpTG1GMllXeGthV2RwZEdGc2JHRmljeTVqYjIwZ1pXTmtjMkV0YzJoaE1pMXVhWE4wY0RJMU5pQkJRVUZCUlRKV2FscElUbWhNV0U1dldWUkpkR0p0Ykhwa1NFRjVUbFJaUVVGQlFVbGliV3g2WkVoQmVVNVVXVUZCUVVKQ1FrRnJiMWRJVDBoa1pqTk1hMFZqV1VGT05VMXlRVWsxWVVGcGRYSlJNemwwY25oWlJGcHZZMHhKYVZwUmNYbG1RbUZsTUcxVWRuUnFLMDlMTUVrclVsb3dXWGhpTlZSb2JuRnpTVEJpTDBWTllXbHVla3B6UFFvPScKICBQUk9KRUNUX0lEPSdiYXZ2LXBhc2l2by1xYS1mcm9udGVuZC1zdGcnCiAgSk9CX0RFRklOSVRJT049IiQoY3VybCAtLXJlcXVlc3QgR0VUICdodHRwOi8vcmItcGItc3RnLTE3OTMyNjE2NzgudXMtZWFzdC0yLmVsYi5hbWF6b25hd3MuY29tL2Nhc3RsZW1vY2svbW9jay9yZXN0L3Byb2plY3QvNFFNaUVtL2FwcGxpY2F0aW9uL2dyMVNTOC9jb25maWcnIC0taGVhZGVyICJwcm9qZWN0OiRQUk9KRUNUX0lEIikiCiAgR0lUX1VSTD0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5yZXBvc2l0b3J5LnVybCcpCiAgR0lUX0JSQU5DSD0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5yZXBvc2l0b3J5LmJyYW5jaCcpCiAgRU5WSVJPTk1FTlQ9JChlY2hvICRKT0JfREVGSU5JVElPTiB8IGpxIC1yICcuZW52aXJvbm1lbnQnKQogIFJFUE9SVF9QQVRIPSQoZWNobyAkSk9CX0RFRklOSVRJT04gfCBqcSAtciAnLmN5cHJlc3MucmVwb3J0JykKICBOT0RFSlNfVkVSU0lPTj0kKGVjaG8gJEpPQl9ERUZJTklUSU9OIHwganEgLXIgJy5ub2RlanMudmVyc2lvbicpCiAgQ1lQUkVTU19WRVJTSU9OPSQoZWNobyAkSk9CX0RFRklOSVRJT04gfCBqcSAtciAnLmN5cHJlc3MudmVyc2lvbicpCiAgQ1lQUkVTU19TUEVDPSQoZWNobyAkSk9CX0RFRklOSVRJT04gfCBqcSAtciAnLmN5cHJlc3Muc3BlYycpCiAgQ1lQUkVTU19CUk9XU0VSPSQoZWNobyAkSk9CX0RFRklOSVRJT04gfCBqcSAtciAnLmN5cHJlc3MuYnJvd3NlcicpCiAgR0lUX1BST0pFQ1Q9JChiYXNlbmFtZSAkR0lUX1VSTCkKICBHSVRfUFJPSkVDVF9OQU1FPSR7R0lUX1BST0pFQ1QlLip9CiAgV09SS19ESVI9Ii9ob21lL2VjMi11c2VyL2plbmtpbnMiCiAgU1NIX0RJUj0iJFdPUktfRElSLy5zc2giCiAgU1NIX0ZJTEU9IiRTU0hfRElSL2lkX3JzYSIKICBLTk9XX0hPU1RfRklMRT0iJFNTSF9ESVIva25vd25faG9zdHMiCiAgc3VkbyBybSAtcmYgIiRXT1JLX0RJUiIKICBta2RpciAtcCAiJFNTSF9ESVIiCiAgY2QgIiRXT1JLX0RJUiIKICBlY2hvICIkS05PV19IT1NUIiB8IGJhc2U2NCAtZCA+ICIkS05PV19IT1NUX0ZJTEUiCiAgY3VybCAtLXJlcXVlc3QgR0VUICdodHRwOi8vcmItcGItc3RnLTE3OTMyNjE2NzgudXMtZWFzdC0yLmVsYi5hbWF6b25hd3MuY29tL2Nhc3RsZW1vY2svbW9jay9yZXN0L3Byb2plY3QvNFFNaUVtL2FwcGxpY2F0aW9uL2dyMVNTOC9jb25maWcnIC0taGVhZGVyICdrZXk6KicgfCBiYXNlNjQgLWQgPiAiJFNTSF9GSUxFIgogIGVjaG8gImV4cG9ydCBHSVRfVVJMPSRHSVRfVVJMIiA+IGVudgogIGVjaG8gImV4cG9ydCBHSVRfQlJBTkNIPSRHSVRfQlJBTkNIIiA+PiBlbnYKICBlY2hvICJleHBvcnQgR0lUX1BST0pFQ1RfTkFNRT0kR0lUX1BST0pFQ1RfTkFNRSIgPj4gZW52CiAgZWNobyAiZXhwb3J0IFJFUE9SVF9QQVRIPSRSRVBPUlRfUEFUSCIgPj4gZW52CiAgZWNobyAiZXhwb3J0IEVOVklST05NRU5UPSRFTlZJUk9OTUVOVCIgPj4gZW52CiAgZWNobyAiZXhwb3J0IE5PREVKU19WRVJTSU9OPSROT0RFSlNfVkVSU0lPTiIgPj4gZW52CiAgZWNobyAiZXhwb3J0IENZUFJFU1NfVkVSU0lPTj0kQ1lQUkVTU19WRVJTSU9OIiA+PiBlbnYKICBlY2hvICJleHBvcnQgQ1lQUkVTU19TUEVDPSRDWVBSRVNTX1NQRUMiID4+IGVudgogIGVjaG8gImV4cG9ydCBDWVBSRVNTX0JST1dTRVI9JENZUFJFU1NfQlJPV1NFUiIgPj4gZW52CiAgY2F0IGVudgogIGRvY2tlciBydW4gLS1ybSAtdiAkKHB3ZCkvLnNzaDovcm9vdC8uc3NoIC12ICQocHdkKTovZ2l0IGFscGluZS9naXQgY2xvbmUgLWIgJEdJVF9CUkFOQ0ggJEdJVF9VUkwKICBjZCAkR0lUX1BST0pFQ1RfTkFNRQogIGRvY2tlciBydW4gLS1ybSAtdiAkUFdEOi9hcHAgYml0bmFtaS9ub2RlOiROT0RFSlNfVkVSU0lPTiBucG0gaW5zdGFsbAogIGRvY2tlciBydW4gLS1ybSAtdiAkUFdEOi9lMmUgLXcgL2UyZSBjeXByZXNzL2luY2x1ZGVkOiRDWVBSRVNTX1ZFUlNJT04gcnVuIC1iICR7Q1lQUkVTU19CUk9XU0VSfSAtLWhlYWRsZXNzIC0tcmVwb3J0ZXIgY3lwcmVzcy1tdWx0aS1yZXBvcnRlcnMgLS1yZXBvcnRlci1vcHRpb25zIGNvbmZpZ0ZpbGU9Y3lwcmVzcy5qc29uIC0tZW52IGNvbmZpZ0ZpbGU9JEVOVklST05NRU5UIC1zICIkQ1lQUkVTU19TUEVDIgpFTkRTU0gK","closure":"IyEvdXNyL2Jpbi9lbnYgYmFzaApLRVk9c3RnCkVDMj1yYi1wYi1zdGctdGNwLTI2NTdiMzgzNGYzMGE1NWMuZWxiLnVzLWVhc3QtMi5hbWF6b25hd3MuY29tCklERU5USVRZPSdMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFEwS1RVbEpSWEJSU1VKQlFVdERRVkZGUVRGRGJXNU1VbFZwVFUwM1ZYaHVSbGRQZEhreVUwZHRkVVZZVTBacmRrbG1Vemh1TDA5SFNtVkRSVWROYkRWc2FnMEtZVUpuYkVOQ1duaFJZazlsWVc1UFoxSmFaVU5KU3pFMlluaFllRVpUYUZSdU0ycFRSR1pzZDB0SWN5dGtURzFJWnpnd1psbDJSbTFwTnlzelRqRmhTUTBLU2tSUGNtNXpkVU5pTTFWYVRIWlBOWE5KU2xwSE5rVnFhbXhwUkZCeFRVTlliVU5KV2xCRlJtOHdkVUUzZFZSclVrZFlhRkJZTVdKbmJWbHZkMDV3VkEwS1YzVkdjRWxsV1c0NU1VVmtNVkY0YmxkWE56Wklla2xoYVZKa2FtaGxNalprYzNOR01HZDZZaTkwVVVSdGFYZzBWblYxWW1KR1VVZ3dMMW8yT0VOVU1nMEtkbmhrV2xKNE1XUndSbXBhTDJVeVFrZEpSWHBDY1dRemNGaEpUVWhIVTBwbVpXOVBaMmxXUVU4M1pVZHBNamhHYUZneFFWVjNSRUpFYXpWSVUyUmtSQTBLZFdkTU0wOVdVak50T0ZaNE5XSnhWVkoxVnpWRGRHaHFWWGh3WlhCTmRtSkNWbkpRTjNkSlJFRlJRVUpCYjBsQ1FWRkVTR1p6VFhKeFVYVldVMWRpV2cwS2EyZHBOMGxJTlcxaFRHazRkMUYzTkhWSFMyeExWRTVNUjFoUVFqTTJSVXhwTjJac1ZWazNRWEJDYlhFMVprc3pkR3BIYlZCdGFXeDNXRzB5Y1hKTlpRMEtZV1ZVTTNSMWQwNUtPV1JIZFZaNGJ6bFhkSFpwTld4UWRVSXpjMjFyUkRGVUwwTkVNbVpKZFZKeU5VaG1OWGhIWjJaaVFTdHNRUzl2Y1RKRlZUaGFWZzBLVWpSSllYSkVjVlZpS3pSV1RtaElkV3RHZG5veFRHbFBNRk5yVXpKeVV6bFJTbE54VTFCemRXNHJUbGxTY2s5YWQyZDVhalZPT0VzM1kzVlFOVXhLVkEwS1FreEVabGR3WmtKUlkzVnhNM2t3WlU0NU56aFRTVTUzVVUxclZWbHFhSEI2VkVremQyVktUMk4zWW5CVmNWUkZUUzh4ZFZCMFEwMVFWVzFYVWpaWlRnMEtkV3N6YnpRMk5rdElTalJESzBaUFZqUkdTamxwUjB4clUyUTFWVGRLZFROQ2RHMVJVM2xKYUV0alZXUkVVbTVqZEVZeU4wRjNjbGhvU0VaWVpYVTFVQTBLUzNOM1puazJVRUpCYjBkQ1FWQTNaakZCUVd0emExRmxLMEpuVWtSSFZrYzFWSFZJVWpWeE4xRlNNMHhPVUV3dlV6bGtZazlyYW01VWFYZFJUekpWVWcwS1NVMDBlRUZITUhWdVNGWkRibmh5TWtWWk9ETndPRGhtWVhCTk5VZFdWM1Z2WkVwTlNsZHJiVW92Y1U0eFlqRkhPRU5sZGs1TFJHNUJlalpSVUdKUVpBMEtjbXhXVEhsa01tNVZjMnhzZGpBeVMwTjZZMDVVV2k5bUswMVNNVUl4ZUcxVlIxWTBVemRUTVdOSWNTdDJhbXAyYXpOSGVUaDFiMnhCYjBkQ1FVNVZXZzBLYVVsaWVETllMMjlXU1U5Rk5uZHZPU3RFWm5STmVXbFBUV1JWY21aU1JUSmhVRzFIUlV4dFkxZzBVekZpUWxsR2FsVnVRWFZWZHk5bWIwVnhVRWxEU0EwS1puUXlibXh6WlRoYVkxRkdTRlJ2T0djdlJHSnRSMFEyWkcxNlEyUmtPR3hYVDBoNGJWQjBPV2RwWWtOeWFFdFFkMjVNUVdNMmVYQnpka1ZOZURSc2RnMEtOVWhFVUhsTFVGWXpiblJxTUZOdmNGbFVkV0Y1V0U1VE5uQlRUVlpVV0hFd2JXTXpjREZQUkVGdlIwSkJVRm9yVm1wUlJsTlljbXRWUzBKR04wc3dUdzBLUldGcGRYWnhkVUZ4WjNNNFpXVnpRWGxOU25kamEwRk1ieXRwZEd0cFR5dHRka2RRU25CQ2VGbGtUblZMVWpSVlIxRjBabXRwVjFsb2NWQXpkSFUzVFEwS2R6Wm1NVU5OUmxkeE5XVkJSVTVVVEdoSWREZ3dVRTVGVDBSclRHMTNSVmhTWjBWelIxRkZURlE1SzBSVVlUWmFPRkp4S3k5UVJ5OHhTVVkzYUZSRWVBMEtjWEJPV0RocEwwVjNhRWRVTkRkcFFYbDVTazVLVHpCYVFXOUhRa0ZLU3psMk1tSXhXRVZ4T0RaS01tTlNUMGhNY0VsaFYyWjZhalZIWkZkd01tSnBiQTBLYlVGdWFsTk9ZMWh0UTNKb1dubHRUemQ1YTFCWWEyNXJSM2t2UlhKME4zVTNkWGxvWmpsSVVYRk9PR1pwYlROVmVVTktkV2hRUzJFMWFuVnJaVTVwVGcwS1pHcFJORlYwYTNwS2VFZGlNRFZUVTJwQ2NrczNXbnBFVTNGYU1ETXhOa1IyTTBoNmEzb3hSMmMyY2tOS1NVWTRPWGxwT1ZGUFZqVXZia1ZIV2xwTU5BMEtVR0ZUTkVSVVFWUkJiMGRCVjAxblZsUlFjRWR2V2xobGNUZFllbWhTYm0xSGNXeDBRbEozTkdWdFpHdE5lbk16T0N0bmRXSXpPSGx6Ylc4NE5VWTFlUTBLY1dkUlRsazFjMVZvWTNCTFMyWmhjblU0UVdGaVRrSlliVGhHYVZkbFpYbEJVak4zVUdsUWRWbzNjRlkzTUhwemJWVnZhM3AyVTNCNmJVSmpNMFl6YmcwS1pWQlhhVWwwUzFZMVZ6WndPVFJEU1hGck16RjRZMDlNVWxGRGEwNHJRWGR1VUhkaVZqQkJSSFZuZVhRNWRFRnBVVEJCUjFkRGN6ME5DaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0JwpQUk9KRUNUX0lEPSdiYXZ2LXBhc2l2by1xYS1mcm9udGVuZC1zdGcnCnNzaCAtbyBTdHJpY3RIb3N0S2V5Q2hlY2tpbmc9bm8gLWkgIiRLRVkiICJlYzItdXNlckAkRUMyIiA8PCdFTkRTU0gnCiAgV09SS19ESVI9Ii9ob21lL2VjMi11c2VyL2plbmtpbnMiCiAgLiAiJFdPUktfRElSL2VudiIKICBSRVBPUlRfQUJTT0xVVEVfUEFUSD0iJFdPUktfRElSLyRHSVRfUFJPSkVDVF9OQU1FLyRSRVBPUlRfUEFUSCIKICBjZCAiJFdPUktfRElSLyRHSVRfUFJPSkVDVF9OQU1FIgogIGRvY2tlciBydW4gLS1ybSAtdiAkUFdEOi9hcHAgYml0bmFtaS9ub2RlOiROT0RFSlNfVkVSU0lPTiAvYmluL2Jhc2ggLWMgImFwdCB1cGRhdGUgJiYgYXB0LWdldCBpbnN0YWxsIC15IHNvZnR3YXJlLXByb3BlcnRpZXMtY29tbW9uICYmIGFkZC1hcHQtcmVwb3NpdG9yeSAnZGViIGh0dHA6Ly9zZWN1cml0eS5kZWJpYW4ub3JnL2RlYmlhbi1zZWN1cml0eSBzdHJldGNoL3VwZGF0ZXMgbWFpbicgJiYgYXB0IHVwZGF0ZSAmJiBhcHQgaW5zdGFsbCAteSBvcGVuamRrLTgtamRrICYmIG5wbSBydW4gdGVzdDpyZXBvcnRzIgogIGNkICRSRVBPUlRfQUJTT0xVVEVfUEFUSAogIFJFUE9SVF9JTkRFWF9GSUxFPSQoZmluZCAuIC10eXBlIGYgLXJlZ2V4ICIuKi5odG1sIiB8IGhlYWQgLW4gMSkKICBlY2hvICJbSU5GT10gUkVQT1JUIFBBVEg6ICRXT1JLX0RJUi8kR0lUX1BST0pFQ1RfTkFNRS8kUkVQT1JUX1BBVEgiCiAgZWNobyAiW0lORk9dIFJFUE9SVF9JTkRFWF9GSUxFOiAkUkVQT1JUX0lOREVYX0ZJTEUiCiAgc3VkbyBtdiAtZiAkUkVQT1JUX0lOREVYX0ZJTEUgaW5kZXguaHRtbAogIGxzIC1sCiAgWklQX0ZJTEU9IiRXT1JLX0RJUi9yZXBvcnQuemlwIgogIHppcCAkWklQX0ZJTEUgLXIgLgpFTkRTU0gKRklMRV9OQU1FPSJyZXBvcnQuemlwIgpTUkNfUEFUSD0iL2hvbWUvZWMyLXVzZXIvamVua2lucy8kRklMRV9OQU1FIgpUQVJHRVRfUEFUSD0iLiIKUElQRUxJTkVfVEFSR0VUX1BBVEg9Ii4vdGFyZ2V0L3NpdGUvc2VyZW5pdHkiCnNjcCAtaSAiJEtFWSIgImVjMi11c2VyQCRFQzI6JFNSQ19QQVRIIiAiJFRBUkdFVF9QQVRIIgpybSAtcmYgIiRQSVBFTElORV9UQVJHRVRfUEFUSCIKbWtkaXIgLXAgIiRQSVBFTElORV9UQVJHRVRfUEFUSCIKdW56aXAgIiRUQVJHRVRfUEFUSC8kRklMRV9OQU1FIiAtZCAiJFBJUEVMSU5FX1RBUkdFVF9QQVRIIgpscyAtUmwgJFBJUEVMSU5FX1RBUkdFVF9QQVRICg=="}}&#13;
</body>
            <contentEncodings/>
            <headerQueries>
                <headerQuery>
                    <header>job</header>
                    <matchAny>false</matchAny>
                    <matchCase>false</matchCase>
                    <matchRegex>false</matchRegex>
                    <query>bavv-pasivo-qa-frontend-stg</query>
                </headerQuery>
            </headerQueries>
            <httpHeaders/>
            <httpStatusCode>200</httpStatusCode>
            <id>th4YBh</id>
            <jsonPathExpressions/>
            <methodId>CgAueC</methodId>
            <name>bavv-pasivo-qa-frontend-cypress-stg</name>
            <parameterQueries/>
            <status>ENABLED</status>
            <usingExpressions>false</usingExpressions>
            <xpathExpressions/>
        </mockResponse>
    </mockResponses>
    <project>
        <description></description>
        <id>4QMiEm</id>
        <name>bavv-pasivo-qa</name>
        <applications/>
    </project>
    <resources>
        <resource>
            <applicationId>gr1SS8</applicationId>
            <id>lSbiBJ</id>
            <methods/>
            <name>config</name>
            <uri>/config</uri>
        </resource>
    </resources>
</restExportContainer>
